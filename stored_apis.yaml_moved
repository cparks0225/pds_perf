---
- !ruby/object:PdsService
  path: productsearch
  description: ''
  apis:
  - path: "/1/productsearch"
    description: Product search
    operations:
    - httpMethod: GET
      summary: Search for products matching passed in query
      notes: Query terms are used in lexigraphical search against product names, product
        type names, market names, etc.
      deprecated: 
      responseClass: void
      nickname: searchProducts
      parameters:
      - name: query
        description: Text to search for
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: marketIds
        description: Coma separated list of market Ids (or one market Id) to filter
          search results
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: startIdx
        description: Start at this position in the return set (used for paging results);
          default value = 0
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: endIdx
        description: End at this position in the return set (used for paging results);
          default value = 20
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
    - httpMethod: POST
      summary: Sync search domain with the active products in a given market
      notes: 
      deprecated: 
      responseClass: void
      nickname: syncInstruments
      parameters:
      - name: marketId
        description: Market Id to operate on
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
  models: 
- !ruby/object:PdsService
  path: productchecksum
  description: ''
  apis:
  - path: "/1/productchecksum"
    description: Products checksum
    operations:
    - httpMethod: GET
      summary: Get product checksums for the given market(s)
      notes: Product checksums are used by product collectors in order to filter data
        upload only to those entities that have changed.
      deprecated: 
      responseClass: void
      nickname: getProductChecksum
      parameters:
      - name: marketIds
        description: Coma separated list of market Ids (or one market Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: sourceType
        description: Download checksums corresponding to this collector/source type
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: count
        description: Limit the size of the return set (used for paging results); default
          value = 2000
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: lastId
        description: Start from this product (used in conjuction with 'count' for
          paging)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: reqRev
        description: Download only those products modified after this revision
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: fetchType
        description: 'Fetch style for this request. Determines amount of data to return.
          Options: norm, debug'
        notes: 
        paramType: query
        defaultValue: 
        allowableValues:
          values:
          - norm
          - debug
          valueType: LIST
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  models: 
- !ruby/object:PdsService
  path: instrumentsearch
  description: ''
  apis:
  - path: "/1/instrumentsearch"
    description: Instrument search
    operations:
    - httpMethod: GET
      summary: Search for instruments matching passed in query
      notes: Query terms are used in lexigraphical search against instrumentnames,
        product type names, market names, dates, etc.
      deprecated: 
      responseClass: void
      nickname: searchInstruments
      parameters:
      - name: query
        description: Text to search for
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: marketIds
        description: Coma separated list of market Ids (or one market Id) to filter
          search results
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: startIdx
        description: Start at this position in the return set (used for paging results);
          default value = 0
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: endIdx
        description: End at this position in the return set (used for paging results);
          default value = 20
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
    - httpMethod: POST
      summary: Sync search domain with the active instruments in a given market
      notes: 
      deprecated: 
      responseClass: void
      nickname: syncInstruments
      parameters:
      - name: marketId
        description: Market Id to operate on
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
  models: 
- !ruby/object:PdsService
  path: syntheticspreadsearch
  description: ''
  apis:
  - path: "/1/syntheticspreadsearch"
    description: Synthetic spreads search
    operations:
    - httpMethod: GET
      summary: Search for synthetic spreads matching passed in query
      notes: 
      deprecated: 
      responseClass: void
      nickname: searchSpreads
      parameters:
      - name: startIdx
        description: Start at this position in the return set (used for paging results);
          default value = 0
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: endIdx
        description: End at this position in the return set (used for paging results);
          default value = 20
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: query
        description: Text to search for
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  models: 
- !ruby/object:PdsService
  path: spreadrules
  description: ''
  apis:
  - path: "/1/spreadrules/{id:[0-9]+}"
    description: Operations on synthetic spread rules.
    operations:
    - httpMethod: DELETE
      summary: Delete a synthetic spread rule.
      notes: 
      deprecated: 
      responseClass: void
      nickname: deleteRule
      parameters:
      - name: id
        description: An Id of the synthetic rule to be deleted
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
    - httpMethod: GET
      summary: Get one synthetic spread rule by Id
      notes: Rule Id is a string representation of an unsigned 64 bit number
      deprecated: 
      responseClass: void
      nickname: getRuleById
      parameters:
      - name: id
        description: Rule Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  - path: "/1/spreadrules"
    description: Operations on synthetic spread rules.
    operations:
    - httpMethod: POST
      summary: Create or modify a synthetic rule.
      notes: 
      deprecated: 
      responseClass: void
      nickname: uploadRules
    - httpMethod: GET
      summary: Get one or more synthetic spread rules with one of the provided filters.
        Get all visible rules if no filter is specified.
      notes: 'Only one filter (of the set: ruleIds, ruleKeys) can be used at a time'
      deprecated: 
      responseClass: void
      nickname: getRules
      parameters:
      - name: ruleIds
        description: Coma separated list of rule Ids (or one rule Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ruleKeys
        description: Coma separated list of rule Keys (or one rule Key)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  - path: "/1/spreadrules/{key:[0-9]+:[0-9]+}"
    description: Operations on synthetic spread rules.
    operations:
    - httpMethod: GET
      summary: Get one synthetic spread rule by Key
      notes: Rule Key is a string representation of rule Id and rule version separated
        by colon ':'
      deprecated: 
      responseClass: void
      nickname: getProductByKey
      parameters:
      - name: key
        description: Rule Key
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  models:
    BigInteger:
      required: false
      name: 
      id: BigInteger
      properties:
        signum:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitCount:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        lowestSetBit:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitLength:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: pmerge
  description: ''
  apis:
  - path: "/1/pmerge/{id}"
    description: Operations on product merge entries.
    operations:
    - httpMethod: DELETE
      summary: Delete a product merge entry.
      notes: 
      deprecated: 
      responseClass: void
      nickname: deleteRule
      parameters:
      - name: id
        description: An Id of product merge entry to be deleted
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
    - httpMethod: GET
      summary: Get one product merge entry by Id
      notes: Id is a string representation of an unsigned 64 bit number
      deprecated: 
      responseClass: void
      nickname: getEntryId
      parameters:
      - name: id
        description: PMerge entry Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
  - path: "/1/pmerge"
    description: Operations on product merge entries.
    operations:
    - httpMethod: GET
      summary: Get all product merge entries.
      notes: 
      deprecated: 
      responseClass: void
      nickname: getAllPMergeEntries
    - httpMethod: POST
      summary: Create or modify a product merge entry.
      notes: 
      deprecated: 
      responseClass: void
      nickname: uploadRules
  models:
    BigInteger:
      required: false
      name: 
      id: BigInteger
      properties:
        signum:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitCount:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        lowestSetBit:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitLength:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: instrumentchecksum
  description: ''
  apis:
  - path: "/1/instrumentchecksum"
    description: Instruments checksum
    operations:
    - httpMethod: GET
      summary: Get instrument checksums for the given market(s)
      notes: Instrument checksums are used by product collectors in order to filter
        data upload only to those entities that have changed.
      deprecated: 
      responseClass: void
      nickname: getInstrumentChecksum
      parameters:
      - name: marketIds
        description: Coma separated list of market Ids (or one market Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: sourceType
        description: Download checksums corresponding to this collector/source type
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: count
        description: Limit the size of the return set (used for paging results); default
          value = 2000
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: lastId
        description: Start from this instrument (used in conjuction with 'count' for
          paging)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: reqRev
        description: Download only those instruments modified after this revision
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: fetchType
        description: 'Fetch style for this request. Determines amount of data to return.
          Options: norm, debug'
        notes: 
        paramType: query
        defaultValue: 
        allowableValues:
          values:
          - norm
          - debug
          valueType: LIST
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  models: 
- !ruby/object:PdsService
  path: syntheticspreads
  description: ''
  apis:
  - path: "/1/syntheticspreads"
    description: Operations on algo instruments
    operations:
    - httpMethod: POST
      summary: Create or modify a synthetic spread
      notes: 
      deprecated: 
      responseClass: void
      nickname: uploadContracts
      parameters:
      - name: noSearch
        description: 
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
      - name: gcse
        description: 
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  - path: "/1/syntheticspreads/{id}"
    description: Operations on algo instruments
    operations:
    - httpMethod: DELETE
      summary: Delete a synthetic spread
      notes: 
      deprecated: 
      responseClass: void
      nickname: deleteSpread
      parameters:
      - name: id
        description: An Id of the synthetic spread to be deleted
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
  models:
    BigInteger:
      required: false
      name: 
      id: BigInteger
      properties:
        signum:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitCount:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        lowestSetBit:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitLength:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: products
  description: ''
  apis:
  - path: "/1/products"
    description: Operations on products
    operations:
    - httpMethod: GET
      summary: Get one or more products with one of the provided filters
      notes: 'Only one filter (of the set: marketIds, productIds, familyIds, productKeys,
        symbols) can be used at a time'
      deprecated: 
      responseClass: void
      nickname: getProducts
      parameters:
      - name: marketIds
        description: Coma separated list of market Ids (or one market Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: productIds
        description: Coma separated list of product Ids (or one product Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: familyIds
        description: Coma separated list of product family Ids (or one product family
          Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: productKeys
        description: Coma separated list of product Keys (or one product Key)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: symbols
        description: Coma separated list of product symbols
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ss
        description: Symbol source for alias information
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: slim
        description: Request slim version of data; default value = true
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  - path: "/1/products/{key:[0-9]+:[0-9]+}"
    description: Operations on products
    operations:
    - httpMethod: GET
      summary: Get one product by Key
      notes: Product Key is a string representation of product Id and product version
        separated by colon ':'
      deprecated: 
      responseClass: void
      nickname: getProductByKey
      parameters:
      - name: key
        description: Product Key
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ss
        description: Symbol source for alias information
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: slim
        description: Request slim version of data; default value = false
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  - path: "/1/products/{id:[0-9]+}"
    description: Operations on products
    operations:
    - httpMethod: GET
      summary: Get one product by Id
      notes: Product Id is a string representation of an unsigned 64 bit number
      deprecated: 
      responseClass: void
      nickname: getProductById
      parameters:
      - name: id
        description: Product Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ss
        description: Symbol source for alias information
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: slim
        description: Request slim version of data; default value = false
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  - path: "/1/products/{id:[0-9]+}/productpairs"
    description: Operations on products
    operations:
    - httpMethod: GET
      summary: Get the product pair based off of the product supplied
      notes: Product Id is a string representation of an unsigned 64 bit number
      deprecated: 
      responseClass: void
      nickname: getProductPairById
      parameters:
      - name: id
        description: Product Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ss
        description: Symbol source for alias information
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: slim
        description: Request slim version of data; default value = false
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  models: 
- !ruby/object:PdsService
  path: instruments
  description: ''
  apis:
  - path: "/1/instruments/{id:[0-9]+}/ottif"
    description: Operations on instruments
    operations:
    - httpMethod: GET
      summary: Get instrument ottif
      notes: Instrument ottif
      deprecated: 
      responseClass: void
      nickname: getInstrumentByIdOrderParam
      parameters:
      - name: id
        description: Instrument Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
  - path: "/1/instruments/{id:[0-9]+}"
    description: Operations on instruments
    operations:
    - httpMethod: DELETE
      summary: Delete an instrument
      notes: Must be a TT admin to execute
      deprecated: 
      responseClass: void
      nickname: deleteInstrument
      parameters:
      - name: id
        description: An Id of the instrument to be deleted
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
    - httpMethod: GET
      summary: Get one instrument by Id
      notes: Instrument Id is a string representation of an unsigned 64 bit number
      deprecated: 
      responseClass: void
      nickname: getInstrumentById
      parameters:
      - name: id
        description: Instrument Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ss
        description: Symbol source for alias information
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: slim
        description: Request slim version of data; default value = false
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  - path: "/1/instruments"
    description: Operations on instruments
    operations:
    - httpMethod: DELETE
      summary: Delete instruments according to provided filters.
      notes: Must be a TT admin to execute
      deprecated: 
      responseClass: void
      nickname: deleteExpiredInstruments
      parameters:
      - name: deleteDaysOffset
        description: Number of days an instrument has to be expired already to qualify
          for deletion
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: purgeDaysOffset
        description: Number of days an instrument has to be deleted already to qualify
          for total removal
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: purgeDate
        description: Purge instruments updated on this date (YYYYMMDD format)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: verificationTime
        description: Verification timestamp for this request (YYYYMMDDHHMMSS format)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
    - httpMethod: GET
      summary: Get one or more instruments with one of the provided filters
      notes: 'Only one filter (of the set: productIds, instrumentIds, name, instrumentKeys,
        marketIds) can be used at a time'
      deprecated: 
      responseClass: void
      nickname: getInstruments
      parameters:
      - name: productIds
        description: Coma separated list of product Ids (or one product Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: instrumentIds
        description: Coma separated list of instrument Ids (or one instrument Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: name
        description: Instrument name
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: instrumentKeys
        description: Coma separated list of instrument Keys (or one instrument Key)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: marketIds
        description: Coma separated list of market Ids (or one market Id)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: count
        description: Limit numer of returned results
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: lastId
        description: Start from this instrument Id (used in conjuction with 'count'
          for paging)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ss
        description: Symbol source for alias information
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: slim
        description: Request slim version of data; default value = true
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  - path: "/1/instruments/{id:[0-9]+}/productpairs"
    description: Operations on instruments
    operations:
    - httpMethod: GET
      summary: Get one instrument by Id
      notes: Instrument Id is a string representation of an unsigned 64 bit number
      deprecated: 
      responseClass: void
      nickname: getProductPairsByInstrumentId
      parameters:
      - name: id
        description: Instrument Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ss
        description: Symbol source for alias information
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: slim
        description: Request slim version of data; default value = true
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  - path: "/1/instruments/{key:[0-9]+:[0-9]+}"
    description: Operations on instruments
    operations:
    - httpMethod: GET
      summary: Get one instrument by Key
      notes: Instrument Key is a string representation of an instrument Id and an
        instrument version separated by colon ':'
      deprecated: 
      responseClass: void
      nickname: getInstrumentByKey
      parameters:
      - name: key
        description: Instrument Key
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: ss
        description: Symbol source for alias information
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: slim
        description: Request slim version of data; default value = false
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  models:
    BigInteger:
      required: false
      name: 
      id: BigInteger
      properties:
        signum:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitCount:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        lowestSetBit:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitLength:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: ottif
  description: ''
  apis:
  - path: "/1/ottif/combos"
    description: Operations on ottif information
    operations:
    - httpMethod: GET
      summary: Get all combos
      notes: 
      deprecated: 
      responseClass: void
      nickname: getCombos
    - httpMethod: POST
      summary: Upload combos
      notes: 
      deprecated: 
      responseClass: void
      nickname: addCombos
  - path: "/1/ottif/combos/{id:[0-9]+}"
    description: Operations on ottif information
    operations:
    - httpMethod: GET
      summary: Get a combo
      notes: 
      deprecated: 
      responseClass: void
      nickname: getCombo
      parameters:
      - name: id
        description: Combo Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
    - httpMethod: DELETE
      summary: Remove a combo
      notes: 
      deprecated: 
      responseClass: void
      nickname: removeCombo
      parameters:
      - name: id
        description: Combo Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
  - path: "/1/ottif"
    description: Operations on ottif information
    operations:
    - httpMethod: GET
      summary: Get all ottif rules
      notes: 
      deprecated: 
      responseClass: void
      nickname: getOTTIFRecords
      parameters:
      - name: marketId
        description: Market Id
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
    - httpMethod: POST
      summary: Upload ottif rules
      notes: 
      deprecated: 
      responseClass: void
      nickname: addOTTIFRecord
  - path: "/1/ottif/{id:[0-9]+}"
    description: Operations on ottif information
    operations:
    - httpMethod: GET
      summary: Get an ottif rule
      notes: 
      deprecated: 
      responseClass: void
      nickname: getOTTIFRecord
      parameters:
      - name: id
        description: OTTIF Record Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
    - httpMethod: DELETE
      summary: Remove an ottif rule
      notes: 
      deprecated: 
      responseClass: void
      nickname: removeOTTIFRecord
      parameters:
      - name: id
        description: OTTIF Record Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
  models:
    BigInteger:
      required: false
      name: 
      id: BigInteger
      properties:
        signum:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitCount:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        lowestSetBit:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitLength:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: search
  description: ''
  apis:
  - path: "/1/search"
    description: Combined search for various resource types
    operations:
    - httpMethod: GET
      summary: Search for resources matching passed in query
      notes: Query terms are used in lexigraphical search against instrumentnames,
        product type names, market names, dates, etc.
      deprecated: 
      responseClass: void
      nickname: search
      parameters:
      - name: query
        description: Text to search for
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: marketIds
        description: Coma separated list of market Ids (or one market Id) to filter
          search results
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: startIdx
        description: Start at this position in the return set (used for paging results);
          default value = 0
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: endIdx
        description: End at this position in the return set (used for paging results);
          default value = 20
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: all
        description: Search for all supported resource types
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
      - name: products
        description: Search for products
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
      - name: instruments
        description: Search for instruments
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
      - name: syntheticSpreads
        description: Search for visibile synthetic spreads
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
      - name: aggregatorSpreads
        description: Search for visibile aggregator spreads
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  models: 
- !ruby/object:PdsService
  path: currencyrates
  description: ''
  apis:
  - path: "/1/currencyrates/{fromTag:[A-Z][A-Z][A-Z]}:{toTag:[A-Z][A-Z][A-Z]}"
    description: Operations on currency rates resources
    operations:
    - httpMethod: GET
      summary: Fetch currency rates by ISO abbreviations
      notes: 
      deprecated: 
      responseClass: void
      nickname: getCurencyRates
      parameters:
      - name: fromTag
        description: Currency abbreviation for the rates to be fetched
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: toTag
        description: Currency abbreviation for the rates to be fetched
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  - path: "/1/currencyrates/{toTag:[A-Z][A-Z][A-Z]}"
    description: Operations on currency rates resources
    operations:
    - httpMethod: GET
      summary: Fetch currency rates by ISO abbreviation
      notes: 
      deprecated: 
      responseClass: void
      nickname: getCurencyRates
      parameters:
      - name: toTag
        description: Currency abbreviation for the rates to be fetched
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  - path: "/1/currencyrates"
    description: Operations on currency rates resources
    operations:
    - httpMethod: GET
      summary: Fetch all currency rates
      notes: 
      deprecated: 
      responseClass: void
      nickname: getCurencyRates
    - httpMethod: POST
      summary: Create or modify one or more currency conversion rate
      notes: 
      deprecated: 
      responseClass: void
      nickname: upload
  - path: "/1/currencyrates/{fromId:[0-9]+}:{toId:[0-9]+}"
    description: Operations on currency rates resources
    operations:
    - httpMethod: GET
      summary: Fetch currency rates
      notes: 
      deprecated: 
      responseClass: void
      nickname: getCurencyRates
      parameters:
      - name: fromId
        description: Currency Id for the rates to be fetched
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
      - name: toId
        description: Currency Id for the rates to be fetched
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
  - path: "/1/currencyrates/{toId:[0-9]+}"
    description: Operations on currency rates resources
    operations:
    - httpMethod: GET
      summary: Fetch currency rates
      notes: 
      deprecated: 
      responseClass: void
      nickname: getCurencyRates
      parameters:
      - name: toId
        description: Currency Id for the rates to be fetched
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: Short
  models: 
- !ruby/object:PdsService
  path: aggregatorspreads
  description: ''
  apis:
  - path: "/1/aggregatorspreads"
    description: Operations on aggregator instruments
    operations:
    - httpMethod: POST
      summary: Create or modify a synthetic spread
      notes: 
      deprecated: 
      responseClass: void
      nickname: uploadContracts
      parameters:
      - name: noSearch
        description: 
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
      - name: gcse
        description: 
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: boolean
  - path: "/1/aggregatorspreads/{id}"
    description: Operations on aggregator instruments
    operations:
    - httpMethod: DELETE
      summary: Delete a synthetic spread
      notes: 
      deprecated: 
      responseClass: void
      nickname: deleteSpread
      parameters:
      - name: id
        description: An Id of the synthetic spread to be deleted
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
  models:
    BigInteger:
      required: false
      name: 
      id: BigInteger
      properties:
        signum:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitCount:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        lowestSetBit:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitLength:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: systemdata
  description: ''
  apis:
  - path: "/1/systemdata"
    description: System settings operations
    operations:
    - httpMethod: GET
      summary: Get system parameters
      notes: Get various system parameters
      deprecated: 
      responseClass: void
      nickname: getSystemData
      parameters:
      - name: type
        description: 'Type of parameters to get. Valid values are: all, global, market,
          allmarket, nativemarket, securityexchange, datacenter, symbolsource, product,
          producttype, allproducttype, productgroup, currency, instrument, ticktable,
          ordertype, timeinforce'
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  models: 
- !ruby/object:PdsService
  path: markets
  description: ''
  apis:
  - path: "/1/markets/{id:[0-9]+}/ottif"
    description: Operations on markets
    operations:
    - httpMethod: GET
      summary: Get instrument ottif
      notes: Instrument ottif
      deprecated: 
      responseClass: void
      nickname: getInstrumentByIdOrderParam
      parameters:
      - name: id
        description: Market Id
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
  - path: "/1/markets/{id:[0-9]+}"
    description: Operations on markets
    operations:
    - httpMethod: DELETE
      summary: Delete a market
      notes: Must be a TT admin to execute
      deprecated: 
      responseClass: void
      nickname: deleteMarket
      parameters:
      - name: id
        description: An Id of the market to be deleted
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
      - name: type
        description: Type of delete to perform
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: verificationTime
        description: Verification timestamp for this request (YYYYMMDDHHMMSS format)
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  models:
    BigInteger:
      required: false
      name: 
      id: BigInteger
      properties:
        signum:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitCount:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        lowestSetBit:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitLength:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: resources
  description: ''
  apis:
  - path: "/1/resources/{id}"
    description: Operations on generic storeable resources
    operations:
    - httpMethod: DELETE
      summary: Delete a generic resource
      notes: 
      deprecated: 
      responseClass: void
      nickname: deleteSpread
      parameters:
      - name: id
        description: An Id of the resource to be deleted
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: UUID
    - httpMethod: GET
      summary: Fetch a generic resource
      notes: 
      deprecated: 
      responseClass: void
      nickname: getOneResource
      parameters:
      - name: id
        description: An Id of the resource to be fetched
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: UUID
    - httpMethod: POST
      summary: Create or modify a generic storeable resource
      notes: 
      deprecated: 
      responseClass: void
      nickname: upload
      parameters:
      - name: id
        description: 
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: UUID
      - name: 
        description: 
        notes: 
        paramType: body
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: InputStream
      - name: 
        description: 
        notes: 
        paramType: body
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: FormDataContentDisposition
      - name: 
        description: 
        notes: 
        paramType: body
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
      - name: 
        description: 
        notes: 
        paramType: body
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  - path: "/1/resources"
    description: Operations on generic storeable resources
    operations:
    - httpMethod: GET
      summary: Fetch all visible generic resources
      notes: 
      deprecated: 
      responseClass: void
      nickname: getVisibleResources
      parameters:
      - name: type
        description: Specific type of resources to be fetched; fetches all resources
          if absent
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  models:
    UUID:
      required: false
      name: 
      id: UUID
      properties:
        leastSignificantBits:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: long
        mostSignificantBits:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: long
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
    FormDataContentDisposition:
      required: false
      name: 
      id: FormDataContentDisposition
      properties:
        creationDate:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: Date
        name:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: string
        fileName:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: string
        parameters:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: Map[string,string]
        type:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: string
        readDate:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: Date
        modificationDate:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: Date
        size:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: long
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: algoinstruments
  description: ''
  apis:
  - path: "/1/algoinstruments"
    description: Operations on algo instruments
    operations:
    - httpMethod: POST
      summary: Create or modify an algo instrument.
      notes: 
      deprecated: 
      responseClass: void
      nickname: uploadContracts
  - path: "/1/algoinstruments/{id}"
    description: Operations on algo instruments
    operations:
    - httpMethod: DELETE
      summary: Delete an algo instrument
      notes: 
      deprecated: 
      responseClass: void
      nickname: deleteSpread
      parameters:
      - name: id
        description: An Id of the algo instrument to be deleted
        notes: 
        paramType: path
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: BigInteger
  models:
    BigInteger:
      required: false
      name: 
      id: BigInteger
      properties:
        signum:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitCount:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        lowestSetBit:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
        bitLength:
          required: false
          name: 
          id: 
          properties: 
          allowableValues: 
          description: 
          notes: 
          access: 
          default: 
          additionalProperties: 
          items: 
          uniqueItems: false
          type: int
      allowableValues: 
      description: 
      notes: 
      access: 
      default: 
      additionalProperties: 
      items: 
      uniqueItems: false
      type: any
- !ruby/object:PdsService
  path: aggregatorspreadsearch
  description: ''
  apis:
  - path: "/1/aggregatorspreadsearch"
    description: Aggregator spreads search
    operations:
    - httpMethod: GET
      summary: Search for synthetic spreads matching passed in query
      notes: 
      deprecated: 
      responseClass: void
      nickname: searchSpreads
      parameters:
      - name: startIdx
        description: Start at this position in the return set (used for paging results);
          default value = 0
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: endIdx
        description: End at this position in the return set (used for paging results);
          default value = 20
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: false
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: int
      - name: query
        description: Text to search for
        notes: 
        paramType: query
        defaultValue: 
        allowableValues: 
        required: true
        allowMultiple: false
        paramAccess: 
        internalDescription: 
        wrapperName: 
        dataType: string
  models: 
